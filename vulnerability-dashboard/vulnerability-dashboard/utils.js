const fs = require('fs');
const path = require('path');

/**
 * Function that fetches the data from the gitlab api and returns the json of said objects
 * @param {String} endPoint the gitlab api endpoint
 * @param {String} privateToken the access token of the project 
 * @returns a JSON of the requested object 
 */
async function getData(endPoint, privateToken) {
    if((typeof endPoint != "string") || (typeof privateToken != "string"))
        throw new TypeError("[Error processing endpoint and/or token]: They must be Strings");

    const mHeaders = new Headers();
    mHeaders.append("PRIVATE-TOKEN", privateToken);

    const requestOpt = {
        method: "GET",
        headers: mHeaders,
    }

    const response = await fetch(endPoint, requestOpt);
    
    if(!response.ok)
        throw new Error("[Error retrieving data from server]: " + response.status + " - "+ response.statusText);

    const jsonResponse = await response.json();
    return jsonResponse;
}

/**
 * Function that reads the data from the given path and returns a json object of it
 * @param {String} filePath the path where the file reside
 * @returns returns the content in form of an json object
 */
function readFile_JSON(filePath) {
    if((typeof filePath != "string"))
        throw new TypeError("[Error processing path]: It must be a String");
    
    const obj = JSON.parse(fs.readFileSync(filePath, 'utf8'));

    return obj;
}

/**
 * Function that sets the config file in the given path with the given obj
 * @param {String} filePath the path of the config file
 * @param {Object} obj the object that represents the content of the file to set
 */
function writeFile_JSON(filePath, obj) {
    if((typeof filePath != "string") || (typeof obj != "object"))
       throw new TypeError("[Error processing path and/or settings]: Path must be a String, settings must be an object");

    fs.writeFileSync(filePath, JSON.stringify(obj));
}

module.exports = {
  getData,
  readFile_JSON,
  writeFile_JSON
};